# Generated by Django 4.0 on 2025-08-18 04:47

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the category name (e.g. Electronics, Groceries).', max_length=255)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='tenants.client')),
            ],
            options={
                'verbose_name_plural': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the product name.', max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.IntegerField(default=0, help_text='Enter the current stock level.', validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.DecimalField(decimal_places=2, help_text='Enter the price of the product.', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('low_stock_threshold', models.PositiveIntegerField(default=10)),
                ('sku', models.CharField(blank=True, max_length=20, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_returnable', models.BooleanField(default=False)),
                ('deposit_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('bottles_outstanding', models.IntegerField(default=0, editable=False)),
                ('category', models.ForeignKey(help_text='Select the category for this product.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='stock.category')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='tenants.client')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('transaction_type', models.CharField(choices=[('sale', 'Sale'), ('restock', 'Restock'), ('deposit_refund', 'Deposit Refund'), ('deposit_collected', 'Deposit Collected')], max_length=20)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('deposit_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.customuser')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stock.product')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='tenants.client')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The legal name of the company.', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='companies', to='tenants.client')),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['-timestamp'], name='stock_trans_timesta_db3c0e_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_type'], name='stock_trans_transac_c3f401_idx'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(fields=('tenant', 'sku'), name='unique_tenant_sku'),
        ),
        migrations.AddConstraint(
            model_name='company',
            constraint=models.UniqueConstraint(fields=('tenant', 'name'), name='unique_tenant_company'),
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(fields=('tenant', 'name'), name='unique_tenant_category'),
        ),
    ]
