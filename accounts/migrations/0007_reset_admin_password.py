# Generated by Django 4.0 on 2025-10-21 10:49

import os
from django.db import migrations
from django.contrib.auth import get_user_model

def or_create_superuser(apps, schema_editor):
    User = get_user_model()
    
    # Get credentials from environment variables
    # Get credentials from environment variables
    username = os.environ.get('ADMIN_USERNAME')
    email = os.environ.get('ADMIN_EMAIL')
    password = os.environ.get('ADMIN_PASSWORD')

    # Stop if variables are not set
    if not all([username, email, password]):
        print('Admin credentials not set in environment variables. Skipping superuser setup.')
        return

    try:
        # Try to find the superuser by username
        admin = User.objects.get(username=username)
        
        # Update their details and RESET their password
        admin.email = email
        admin.set_password(password) # This is the key: it hashes the new password
        admin.is_superuser = True
        admin.is_staff = True
        admin.save()
        print(f'Superuser "{username}" already existed, password has been reset.')

    except User.DoesNotExist:
        # If they don't exist, create them
        User.objects.create_superuser(username=username, email=email, password=password)
        print(f'Superuser "{username}" created successfully!')


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0006_merge_20251021_1145'),
    ]

    operations = [
        migrations.RunPython(or_create_superuser),
    ]
